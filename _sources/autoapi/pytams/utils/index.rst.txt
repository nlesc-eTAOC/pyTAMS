pytams.utils
============

.. py:module:: pytams.utils

.. autoapi-nested-parse::

   A set of utility functions for TAMS.



Functions
---------

.. autoapisummary::

   pytams.utils.setup_logger
   pytams.utils.get_min_scored
   pytams.utils.moving_avg
   pytams.utils.get_module_local_import


Module Contents
---------------

.. py:function:: setup_logger(params: dict[Any, Any]) -> None

   Setup the logger parameters.

   :param params: a dictionary of parameters


.. py:function:: get_min_scored(maxes: numpy.typing.NDArray[Any], nworkers: int) -> tuple[list[int], numpy.typing.NDArray[Any]]

   Get the nworker lower scored trajectories or more if equal score.

   :param maxes: array of maximas accros all trajectories
   :param nworkers: number of workers

   :returns: list of indices of the nworker lower scored trajectories
             array of minimas


.. py:function:: moving_avg(arr_in: numpy.typing.NDArray[Any], window_l: int) -> numpy.typing.NDArray[Any]

   Return the moving average of a 1D numpy array.

   :param arr_in: 1D numpy array
   :param window_l: length of the moving average window

   :returns: 1D numpy array


.. py:function:: get_module_local_import(module_name: str) -> list[str]

   Helper function getting local imported mods list.

   When pickling the forward model code, the model itself can import from
   several other local files. We also want to pickle those by value so let's get
   the list.

   :param module_name: a module name we want the locally imported modules

   :returns: A list of local modules names imported within the provide module


