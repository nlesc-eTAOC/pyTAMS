Search.setIndex({"alltitles": {"A simple example: 2D double well": [[1, "a-simple-example-2d-double-well"]], "Algorithm": [[1, "algorithm"]], "Attributes": [[6, "attributes"], [7, "attributes"], [12, "attributes"]], "Classes": [[3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"]], "Controls": [[0, "controls"]], "Data structures & storage": [[1, "data-structures-storage"]], "Developer corner:": [[13, null]], "Double-well 3D": [[2, "double-well-3d"]], "Exceptions": [[8, "exceptions"], [9, "exceptions"], [12, "exceptions"]], "Functions": [[7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"]], "High-dimension considerations": [[1, "high-dimension-considerations"]], "Implementation": [[1, "implementation"]], "Indices and tables": [[13, "indices-and-tables"]], "Introduction to TAMS": [[1, "introduction-to-tams"]], "Loading the database": [[0, "loading-the-database"]], "Module Contents": [[3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"]], "Running pyTAMS": [[0, "running-pytams"]], "Submodules": [[5, "submodules"]], "Theory": [[1, null]], "Tutorials": [[2, null]], "Usage": [[0, null]], "User corner:": [[13, null]], "Welcome to pyTAMS\u2019s documentation!": [[13, null]], "Workers & parallelism": [[1, "workers-parallelism"]], "pytams": [[5, null]], "pytams.database": [[3, null]], "pytams.fmodel": [[4, null]], "pytams.sqldb": [[6, null]], "pytams.tams": [[7, null]], "pytams.taskrunner": [[8, null]], "pytams.trajectory": [[9, null]], "pytams.utils": [[10, null]], "pytams.worker": [[11, null]], "pytams.xmlutils": [[12, null]]}, "docnames": ["Controls", "TAMS", "Tutorials", "autoapi/pytams/database/index", "autoapi/pytams/fmodel/index", "autoapi/pytams/index", "autoapi/pytams/sqldb/index", "autoapi/pytams/tams/index", "autoapi/pytams/taskrunner/index", "autoapi/pytams/trajectory/index", "autoapi/pytams/utils/index", "autoapi/pytams/worker/index", "autoapi/pytams/xmlutils/index", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["Controls.rst", "TAMS.rst", "Tutorials.rst", "autoapi/pytams/database/index.rst", "autoapi/pytams/fmodel/index.rst", "autoapi/pytams/index.rst", "autoapi/pytams/sqldb/index.rst", "autoapi/pytams/tams/index.rst", "autoapi/pytams/taskrunner/index.rst", "autoapi/pytams/trajectory/index.rst", "autoapi/pytams/utils/index.rst", "autoapi/pytams/worker/index.rst", "autoapi/pytams/xmlutils/index.rst", "index.rst"], "indexentries": {"add_splitting_data() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.add_splitting_data", false]], "add_task() (asiorunner method)": [[8, "pytams.taskrunner.AsIORunner.add_task", false]], "add_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.add_trajectory", false]], "advance() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.advance", false]], "advance() (trajectory method)": [[9, "pytams.trajectory.Trajectory.advance", false]], "ancestor_traj_ids (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.ancestor_traj_ids", false]], "append_archived_traj() (database method)": [[3, "pytams.database.Database.append_archived_traj", false]], "append_splitting_iteration_data() (database method)": [[3, "pytams.database.Database.append_splitting_iteration_data", false]], "append_traj() (database method)": [[3, "pytams.database.Database.append_traj", false]], "archive_trajectory() (database method)": [[3, "pytams.database.Database.archive_trajectory", false]], "archive_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.archive_trajectory", false]], "archived_traj_list_len() (database method)": [[3, "pytams.database.Database.archived_traj_list_len", false]], "archivedtrajectory (class in pytams.sqldb)": [[6, "pytams.sqldb.ArchivedTrajectory", false]], "asiorunner (class in pytams.taskrunner)": [[8, "pytams.taskrunner.AsIORunner", false]], "base (class in pytams.sqldb)": [[6, "pytams.sqldb.Base", false]], "baserunner (class in pytams.taskrunner)": [[8, "pytams.taskrunner.BaseRunner", false]], "bias (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.bias", false]], "branch_from_trajectory() (trajectory class method)": [[9, "pytams.trajectory.Trajectory.branch_from_trajectory", false]], "check_convergence() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.check_convergence", false]], "check_exit_splitting_loop() (tams method)": [[7, "pytams.tams.TAMS.check_exit_splitting_loop", false]], "clear() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.clear", false]], "clear_archived_trajectories() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.clear_archived_trajectories", false]], "clear_splitting_data() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.clear_splitting_data", false]], "compute_probability() (tams method)": [[7, "pytams.tams.TAMS.compute_probability", false]], "count_computed_steps() (database method)": [[3, "pytams.database.Database.count_computed_steps", false]], "count_converged_traj() (database method)": [[3, "pytams.database.Database.count_converged_traj", false]], "count_ended_traj() (database method)": [[3, "pytams.database.Database.count_ended_traj", false]], "current_time() (trajectory method)": [[9, "pytams.trajectory.Trajectory.current_time", false]], "dask_backend (daskrunner attribute)": [[8, "pytams.taskrunner.DaskRunner.dask_backend", false]], "daskrunner (class in pytams.taskrunner)": [[8, "pytams.taskrunner.DaskRunner", false]], "database (class in pytams.database)": [[3, "pytams.database.Database", false]], "delete() (trajectory method)": [[9, "pytams.trajectory.Trajectory.delete", false]], "dict_to_xml() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.dict_to_xml", false]], "discarded_traj_ids (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.discarded_traj_ids", false]], "do_multilevel_splitting() (tams method)": [[7, "pytams.tams.TAMS.do_multilevel_splitting", false]], "done_with_splitting() (database method)": [[3, "pytams.database.Database.done_with_splitting", false]], "dump_file_json() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.dump_file_json", false]], "elapsed_time() (tams method)": [[7, "pytams.tams.TAMS.elapsed_time", false]], "execute_promises() (asiorunner method)": [[8, "pytams.taskrunner.AsIORunner.execute_promises", false]], "execute_promises() (baserunner method)": [[8, "pytams.taskrunner.BaseRunner.execute_promises", false]], "execute_promises() (daskrunner method)": [[8, "pytams.taskrunner.DaskRunner.execute_promises", false]], "fetch_archived_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.fetch_archived_trajectory", false]], "fetch_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.fetch_trajectory", false]], "finish_ongoing_splitting() (tams method)": [[7, "pytams.tams.TAMS.finish_ongoing_splitting", false]], "form_trajectory_id() (in module pytams.trajectory)": [[9, "pytams.trajectory.form_trajectory_id", false]], "forwardmodelbaseclass (class in pytams.fmodel)": [[4, "pytams.fmodel.ForwardModelBaseClass", false]], "generate_trajectory_ensemble() (tams method)": [[7, "pytams.tams.TAMS.generate_trajectory_ensemble", false]], "get_archived_trajectory_count() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_archived_trajectory_count", false]], "get_biases() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_biases", false]], "get_checkfile() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_checkfile", false]], "get_computed_steps_count() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_computed_steps_count", false]], "get_current_state() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.get_current_state", false]], "get_index_from_id() (in module pytams.trajectory)": [[9, "pytams.trajectory.get_index_from_id", false]], "get_k_split() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_k_split", false]], "get_last_state() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_last_state", false]], "get_length() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_length", false]], "get_metadata_json() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_metadata_json", false]], "get_min_scored() (in module pytams.utils)": [[10, "pytams.utils.get_min_scored", false]], "get_minmax() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_minmax", false]], "get_module_local_import() (in module pytams.utils)": [[10, "pytams.utils.get_module_local_import", false]], "get_nbranching() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_nbranching", false]], "get_noise() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.get_noise", false]], "get_noise_array() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_noise_array", false]], "get_ongoing() (database method)": [[3, "pytams.database.Database.get_ongoing", false]], "get_ongoing() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_ongoing", false]], "get_restart_at_random() (tams method)": [[7, "pytams.tams.TAMS.get_restart_at_random", false]], "get_runner_type() (in module pytams.taskrunner)": [[8, "pytams.taskrunner.get_runner_type", false]], "get_score_array() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_score_array", false]], "get_time_array() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_time_array", false]], "get_traj() (database method)": [[3, "pytams.database.Database.get_traj", false]], "get_trajectory_count() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_trajectory_count", false]], "get_transition_probability() (database method)": [[3, "pytams.database.Database.get_transition_probability", false]], "get_val_type() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.get_val_type", false]], "get_weights() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.get_weights", false]], "get_workdir() (trajectory method)": [[9, "pytams.trajectory.Trajectory.get_workdir", false]], "has_ended() (trajectory method)": [[9, "pytams.trajectory.Trajectory.has_ended", false]], "has_started() (trajectory method)": [[9, "pytams.trajectory.Trajectory.has_started", false]], "has_state() (snapshot method)": [[9, "pytams.trajectory.Snapshot.has_state", false]], "header_file() (database method)": [[3, "pytams.database.Database.header_file", false]], "id (archivedtrajectory attribute)": [[6, "pytams.sqldb.ArchivedTrajectory.id", false]], "id (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.id", false]], "id (trajectory attribute)": [[6, "pytams.sqldb.Trajectory.id", false]], "id() (trajectory method)": [[9, "pytams.trajectory.Trajectory.id", false]], "idstr() (trajectory method)": [[9, "pytams.trajectory.Trajectory.idstr", false]], "info() (database method)": [[3, "pytams.database.Database.info", false]], "init_active_ensemble() (database method)": [[3, "pytams.database.Database.init_active_ensemble", false]], "init_ensemble_done() (database method)": [[3, "pytams.database.Database.init_ensemble_done", false]], "is_converged() (trajectory method)": [[9, "pytams.trajectory.Trajectory.is_converged", false]], "is_empty() (database method)": [[3, "pytams.database.Database.is_empty", false]], "just_delay() (daskrunner method)": [[8, "pytams.taskrunner.DaskRunner.just_delay", false]], "k_split() (database method)": [[3, "pytams.database.Database.k_split", false]], "load() (database class method)": [[3, "pytams.database.Database.load", false]], "load_archived_trajectories() (database method)": [[3, "pytams.database.Database.load_archived_trajectories", false]], "load_data() (database method)": [[3, "pytams.database.Database.load_data", false]], "lock_trajectory() (database method)": [[3, "pytams.database.Database.lock_trajectory", false]], "lock_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.lock_trajectory", false]], "make_noise() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.make_noise", false]], "make_promise() (asiorunner method)": [[8, "pytams.taskrunner.AsIORunner.make_promise", false]], "make_promise() (baserunner method)": [[8, "pytams.taskrunner.BaseRunner.make_promise", false]], "make_promise() (daskrunner method)": [[8, "pytams.taskrunner.DaskRunner.make_promise", false]], "make_xml_snapshot() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.make_xml_snapshot", false]], "manual_cast() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.manual_cast", false]], "manual_cast_snapshot() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.manual_cast_snapshot", false]], "manual_cast_snapshot_noise() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.manual_cast_snapshot_noise", false]], "manual_cast_str() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.manual_cast_str", false]], "mark_last_iteration_as_completed() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.mark_last_iteration_as_completed", false]], "mark_last_splitting_iteration_as_done() (database method)": [[3, "pytams.database.Database.mark_last_splitting_iteration_as_done", false]], "mark_trajectory_as_completed() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.mark_trajectory_as_completed", false]], "min_max (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.min_max", false]], "min_vals (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.min_vals", false]], "module": [[3, "module-pytams.database", false], [4, "module-pytams.fmodel", false], [5, "module-pytams", false], [6, "module-pytams.sqldb", false], [7, "module-pytams.tams", false], [8, "module-pytams.taskrunner", false], [9, "module-pytams.trajectory", false], [10, "module-pytams.utils", false], [11, "module-pytams.worker", false], [12, "module-pytams.xmlutils", false]], "moving_avg() (in module pytams.utils)": [[10, "pytams.utils.moving_avg", false]], "ms_worker() (in module pytams.worker)": [[11, "pytams.worker.ms_worker", false]], "n_split_iter() (database method)": [[3, "pytams.database.Database.n_split_iter", false]], "n_traj() (database method)": [[3, "pytams.database.Database.n_traj", false]], "n_traj() (tams method)": [[7, "pytams.tams.TAMS.n_traj", false]], "n_workers() (asiorunner method)": [[8, "pytams.taskrunner.AsIORunner.n_workers", false]], "n_workers() (baserunner method)": [[8, "pytams.taskrunner.BaseRunner.n_workers", false]], "n_workers() (daskrunner method)": [[8, "pytams.taskrunner.DaskRunner.n_workers", false]], "name() (database method)": [[3, "pytams.database.Database.name", false]], "name() (forwardmodelbaseclass class method)": [[4, "pytams.fmodel.ForwardModelBaseClass.name", false]], "name() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.name", false]], "new_element() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.new_element", false]], "noise (snapshot attribute)": [[9, "pytams.trajectory.Snapshot.noise", false]], "oneliner_ndarray() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.oneliner_ndarray", false]], "out_of_time() (tams method)": [[7, "pytams.tams.TAMS.out_of_time", false]], "overwrite_traj() (database method)": [[3, "pytams.database.Database.overwrite_traj", false]], "parse_cl_args() (in module pytams.tams)": [[7, "pytams.tams.parse_cl_args", false]], "path() (database method)": [[3, "pytams.database.Database.path", false]], "plot_min_max_span() (database method)": [[3, "pytams.database.Database.plot_min_max_span", false]], "plot_score_functions() (database method)": [[3, "pytams.database.Database.plot_score_functions", false]], "pod_cast_dict (in module pytams.xmlutils)": [[12, "pytams.xmlutils.POD_cast_dict", false]], "pool_file() (database method)": [[3, "pytams.database.Database.pool_file", false]], "pool_worker() (in module pytams.worker)": [[11, "pytams.worker.pool_worker", false]], "post_trajectory_branching_hook() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.post_trajectory_branching_hook", false]], "post_trajectory_restore_hook() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.post_trajectory_restore_hook", false]], "pytams": [[5, "module-pytams", false]], "pytams.database": [[3, "module-pytams.database", false]], "pytams.fmodel": [[4, "module-pytams.fmodel", false]], "pytams.sqldb": [[6, "module-pytams.sqldb", false]], "pytams.tams": [[7, "module-pytams.tams", false]], "pytams.taskrunner": [[8, "module-pytams.taskrunner", false]], "pytams.trajectory": [[9, "module-pytams.trajectory", false]], "pytams.utils": [[10, "module-pytams.utils", false]], "pytams.worker": [[11, "module-pytams.worker", false]], "pytams.xmlutils": [[12, "module-pytams.xmlutils", false]], "read_xml_snapshot() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.read_xml_snapshot", false]], "release_all_trajectories() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.release_all_trajectories", false]], "release_trajectory() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.release_trajectory", false]], "remaining_walltime() (tams method)": [[7, "pytams.tams.TAMS.remaining_walltime", false]], "reset_initial_ensemble_stage() (database method)": [[3, "pytams.database.Database.reset_initial_ensemble_stage", false]], "restore_from_checkfile() (trajectory class method)": [[9, "pytams.trajectory.Trajectory.restore_from_checkfile", false]], "run_tasks() (asiorunner method)": [[8, "pytams.taskrunner.AsIORunner.run_tasks", false]], "runnererror": [[8, "pytams.taskrunner.RunnerError", false]], "save_trajectory() (database method)": [[3, "pytams.database.Database.save_trajectory", false]], "score (snapshot attribute)": [[9, "pytams.trajectory.Snapshot.score", false]], "score() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.score", false]], "score_max() (trajectory method)": [[9, "pytams.trajectory.Trajectory.score_max", false]], "set_checkfile() (trajectory method)": [[9, "pytams.trajectory.Trajectory.set_checkfile", false]], "set_current_state() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.set_current_state", false]], "set_init_ensemble_flag() (database method)": [[3, "pytams.database.Database.set_init_ensemble_flag", false]], "set_noise() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.set_noise", false]], "set_workdir() (forwardmodelbaseclass method)": [[4, "pytams.fmodel.ForwardModelBaseClass.set_workdir", false]], "set_workdir() (trajectory method)": [[9, "pytams.trajectory.Trajectory.set_workdir", false]], "setup() (workerloggerplugin method)": [[8, "pytams.taskrunner.WorkerLoggerPlugin.setup", false]], "setup_logger() (in module pytams.utils)": [[10, "pytams.utils.setup_logger", false]], "snapshot (class in pytams.trajectory)": [[9, "pytams.trajectory.Snapshot", false]], "split_id (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.split_id", false]], "splittingiterations (class in pytams.sqldb)": [[6, "pytams.sqldb.SplittingIterations", false]], "sqlfile (class in pytams.sqldb)": [[6, "pytams.sqldb.SQLFile", false]], "stall_tol (in module pytams.tams)": [[7, "pytams.tams.STALL_TOL", false]], "state (snapshot attribute)": [[9, "pytams.trajectory.Snapshot.state", false]], "status (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.status", false]], "status (trajectory attribute)": [[6, "pytams.sqldb.Trajectory.status", false]], "step_size() (trajectory method)": [[9, "pytams.trajectory.Trajectory.step_size", false]], "store() (trajectory method)": [[9, "pytams.trajectory.Trajectory.store", false]], "t_metadata (archivedtrajectory attribute)": [[6, "pytams.sqldb.ArchivedTrajectory.t_metadata", false]], "t_metadata (trajectory attribute)": [[6, "pytams.sqldb.Trajectory.t_metadata", false]], "tams (class in pytams.tams)": [[7, "pytams.tams.TAMS", false]], "time (snapshot attribute)": [[9, "pytams.trajectory.Snapshot.time", false]], "traj_advance_with_exception() (in module pytams.worker)": [[11, "pytams.worker.traj_advance_with_exception", false]], "traj_file (archivedtrajectory attribute)": [[6, "pytams.sqldb.ArchivedTrajectory.traj_file", false]], "traj_file (trajectory attribute)": [[6, "pytams.sqldb.Trajectory.traj_file", false]], "traj_list() (database method)": [[3, "pytams.database.Database.traj_list", false]], "traj_list_len() (database method)": [[3, "pytams.database.Database.traj_list_len", false]], "trajectory (class in pytams.sqldb)": [[6, "pytams.sqldb.Trajectory", false]], "trajectory (class in pytams.trajectory)": [[9, "pytams.trajectory.Trajectory", false]], "unlock_trajectory() (database method)": [[3, "pytams.database.Database.unlock_trajectory", false]], "update_metadata() (trajectory method)": [[9, "pytams.trajectory.Trajectory.update_metadata", false]], "update_splitting_data() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.update_splitting_data", false]], "update_splitting_iteration_data() (database method)": [[3, "pytams.database.Database.update_splitting_iteration_data", false]], "update_traj_list() (database method)": [[3, "pytams.database.Database.update_traj_list", false]], "update_trajectory_file() (database method)": [[3, "pytams.database.Database.update_trajectory_file", false]], "update_trajectory_file() (sqlfile method)": [[6, "pytams.sqldb.SQLFile.update_trajectory_file", false]], "valid_statuses (in module pytams.sqldb)": [[6, "pytams.sqldb.valid_statuses", false]], "walltimelimiterror": [[9, "pytams.trajectory.WallTimeLimitError", false]], "weight (splittingiterations attribute)": [[6, "pytams.sqldb.SplittingIterations.weight", false]], "weights() (database method)": [[3, "pytams.database.Database.weights", false]], "worker_async() (in module pytams.worker)": [[11, "pytams.worker.worker_async", false]], "workerloggerplugin (class in pytams.taskrunner)": [[8, "pytams.taskrunner.WorkerLoggerPlugin", false]], "xml_to_dict() (in module pytams.xmlutils)": [[12, "pytams.xmlutils.xml_to_dict", false]], "xmlutilserror": [[12, "pytams.xmlutils.XMLUtilsError", false]]}, "objects": {"": [[5, 0, 0, "-", "pytams"]], "pytams": [[3, 0, 0, "-", "database"], [4, 0, 0, "-", "fmodel"], [6, 0, 0, "-", "sqldb"], [7, 0, 0, "-", "tams"], [8, 0, 0, "-", "taskrunner"], [9, 0, 0, "-", "trajectory"], [10, 0, 0, "-", "utils"], [11, 0, 0, "-", "worker"], [12, 0, 0, "-", "xmlutils"]], "pytams.database": [[3, 1, 1, "", "Database"]], "pytams.database.Database": [[3, 2, 1, "", "append_archived_traj"], [3, 2, 1, "", "append_splitting_iteration_data"], [3, 2, 1, "", "append_traj"], [3, 2, 1, "", "archive_trajectory"], [3, 2, 1, "", "archived_traj_list_len"], [3, 2, 1, "", "count_computed_steps"], [3, 2, 1, "", "count_converged_traj"], [3, 2, 1, "", "count_ended_traj"], [3, 2, 1, "", "done_with_splitting"], [3, 2, 1, "", "get_ongoing"], [3, 2, 1, "", "get_traj"], [3, 2, 1, "", "get_transition_probability"], [3, 2, 1, "", "header_file"], [3, 2, 1, "", "info"], [3, 2, 1, "", "init_active_ensemble"], [3, 2, 1, "", "init_ensemble_done"], [3, 2, 1, "", "is_empty"], [3, 2, 1, "", "k_split"], [3, 2, 1, "", "load"], [3, 2, 1, "", "load_archived_trajectories"], [3, 2, 1, "", "load_data"], [3, 2, 1, "", "lock_trajectory"], [3, 2, 1, "", "mark_last_splitting_iteration_as_done"], [3, 2, 1, "", "n_split_iter"], [3, 2, 1, "", "n_traj"], [3, 2, 1, "", "name"], [3, 2, 1, "", "overwrite_traj"], [3, 2, 1, "", "path"], [3, 2, 1, "", "plot_min_max_span"], [3, 2, 1, "", "plot_score_functions"], [3, 2, 1, "", "pool_file"], [3, 2, 1, "", "reset_initial_ensemble_stage"], [3, 2, 1, "", "save_trajectory"], [3, 2, 1, "", "set_init_ensemble_flag"], [3, 2, 1, "", "traj_list"], [3, 2, 1, "", "traj_list_len"], [3, 2, 1, "", "unlock_trajectory"], [3, 2, 1, "", "update_splitting_iteration_data"], [3, 2, 1, "", "update_traj_list"], [3, 2, 1, "", "update_trajectory_file"], [3, 2, 1, "", "weights"]], "pytams.fmodel": [[4, 1, 1, "", "ForwardModelBaseClass"]], "pytams.fmodel.ForwardModelBaseClass": [[4, 2, 1, "", "advance"], [4, 2, 1, "", "check_convergence"], [4, 2, 1, "", "clear"], [4, 2, 1, "", "get_current_state"], [4, 2, 1, "", "get_noise"], [4, 2, 1, "", "make_noise"], [4, 2, 1, "", "name"], [4, 2, 1, "", "post_trajectory_branching_hook"], [4, 2, 1, "", "post_trajectory_restore_hook"], [4, 2, 1, "", "score"], [4, 2, 1, "", "set_current_state"], [4, 2, 1, "", "set_noise"], [4, 2, 1, "", "set_workdir"]], "pytams.sqldb": [[6, 1, 1, "", "ArchivedTrajectory"], [6, 1, 1, "", "Base"], [6, 1, 1, "", "SQLFile"], [6, 1, 1, "", "SplittingIterations"], [6, 1, 1, "", "Trajectory"], [6, 4, 1, "", "valid_statuses"]], "pytams.sqldb.ArchivedTrajectory": [[6, 3, 1, "", "id"], [6, 3, 1, "", "t_metadata"], [6, 3, 1, "", "traj_file"]], "pytams.sqldb.SQLFile": [[6, 2, 1, "", "add_splitting_data"], [6, 2, 1, "", "add_trajectory"], [6, 2, 1, "", "archive_trajectory"], [6, 2, 1, "", "clear_archived_trajectories"], [6, 2, 1, "", "clear_splitting_data"], [6, 2, 1, "", "dump_file_json"], [6, 2, 1, "", "fetch_archived_trajectory"], [6, 2, 1, "", "fetch_trajectory"], [6, 2, 1, "", "get_archived_trajectory_count"], [6, 2, 1, "", "get_biases"], [6, 2, 1, "", "get_k_split"], [6, 2, 1, "", "get_minmax"], [6, 2, 1, "", "get_ongoing"], [6, 2, 1, "", "get_trajectory_count"], [6, 2, 1, "", "get_weights"], [6, 2, 1, "", "lock_trajectory"], [6, 2, 1, "", "mark_last_iteration_as_completed"], [6, 2, 1, "", "mark_trajectory_as_completed"], [6, 2, 1, "", "name"], [6, 2, 1, "", "release_all_trajectories"], [6, 2, 1, "", "release_trajectory"], [6, 2, 1, "", "update_splitting_data"], [6, 2, 1, "", "update_trajectory_file"]], "pytams.sqldb.SplittingIterations": [[6, 3, 1, "", "ancestor_traj_ids"], [6, 3, 1, "", "bias"], [6, 3, 1, "", "discarded_traj_ids"], [6, 3, 1, "", "id"], [6, 3, 1, "", "min_max"], [6, 3, 1, "", "min_vals"], [6, 3, 1, "", "split_id"], [6, 3, 1, "", "status"], [6, 3, 1, "", "weight"]], "pytams.sqldb.Trajectory": [[6, 3, 1, "", "id"], [6, 3, 1, "", "status"], [6, 3, 1, "", "t_metadata"], [6, 3, 1, "", "traj_file"]], "pytams.tams": [[7, 4, 1, "", "STALL_TOL"], [7, 1, 1, "", "TAMS"], [7, 5, 1, "", "parse_cl_args"]], "pytams.tams.TAMS": [[7, 2, 1, "", "check_exit_splitting_loop"], [7, 2, 1, "", "compute_probability"], [7, 2, 1, "", "do_multilevel_splitting"], [7, 2, 1, "", "elapsed_time"], [7, 2, 1, "", "finish_ongoing_splitting"], [7, 2, 1, "", "generate_trajectory_ensemble"], [7, 2, 1, "", "get_restart_at_random"], [7, 2, 1, "", "n_traj"], [7, 2, 1, "", "out_of_time"], [7, 2, 1, "", "remaining_walltime"]], "pytams.taskrunner": [[8, 1, 1, "", "AsIORunner"], [8, 1, 1, "", "BaseRunner"], [8, 1, 1, "", "DaskRunner"], [8, 6, 1, "", "RunnerError"], [8, 1, 1, "", "WorkerLoggerPlugin"], [8, 5, 1, "", "get_runner_type"]], "pytams.taskrunner.AsIORunner": [[8, 2, 1, "", "add_task"], [8, 2, 1, "", "execute_promises"], [8, 2, 1, "", "make_promise"], [8, 2, 1, "", "n_workers"], [8, 2, 1, "", "run_tasks"]], "pytams.taskrunner.BaseRunner": [[8, 2, 1, "", "execute_promises"], [8, 2, 1, "", "make_promise"], [8, 2, 1, "", "n_workers"]], "pytams.taskrunner.DaskRunner": [[8, 3, 1, "", "dask_backend"], [8, 2, 1, "", "execute_promises"], [8, 2, 1, "", "just_delay"], [8, 2, 1, "", "make_promise"], [8, 2, 1, "", "n_workers"]], "pytams.taskrunner.WorkerLoggerPlugin": [[8, 2, 1, "", "setup"]], "pytams.trajectory": [[9, 1, 1, "", "Snapshot"], [9, 1, 1, "", "Trajectory"], [9, 6, 1, "", "WallTimeLimitError"], [9, 5, 1, "", "form_trajectory_id"], [9, 5, 1, "", "get_index_from_id"]], "pytams.trajectory.Snapshot": [[9, 2, 1, "", "has_state"], [9, 3, 1, "", "noise"], [9, 3, 1, "", "score"], [9, 3, 1, "", "state"], [9, 3, 1, "", "time"]], "pytams.trajectory.Trajectory": [[9, 2, 1, "", "advance"], [9, 2, 1, "", "branch_from_trajectory"], [9, 2, 1, "", "current_time"], [9, 2, 1, "", "delete"], [9, 2, 1, "", "get_checkfile"], [9, 2, 1, "", "get_computed_steps_count"], [9, 2, 1, "", "get_last_state"], [9, 2, 1, "", "get_length"], [9, 2, 1, "", "get_metadata_json"], [9, 2, 1, "", "get_nbranching"], [9, 2, 1, "", "get_noise_array"], [9, 2, 1, "", "get_score_array"], [9, 2, 1, "", "get_time_array"], [9, 2, 1, "", "get_workdir"], [9, 2, 1, "", "has_ended"], [9, 2, 1, "", "has_started"], [9, 2, 1, "", "id"], [9, 2, 1, "", "idstr"], [9, 2, 1, "", "is_converged"], [9, 2, 1, "", "restore_from_checkfile"], [9, 2, 1, "", "score_max"], [9, 2, 1, "", "set_checkfile"], [9, 2, 1, "", "set_workdir"], [9, 2, 1, "", "step_size"], [9, 2, 1, "", "store"], [9, 2, 1, "", "update_metadata"]], "pytams.utils": [[10, 5, 1, "", "get_min_scored"], [10, 5, 1, "", "get_module_local_import"], [10, 5, 1, "", "moving_avg"], [10, 5, 1, "", "setup_logger"]], "pytams.worker": [[11, 5, 1, "", "ms_worker"], [11, 5, 1, "", "pool_worker"], [11, 5, 1, "", "traj_advance_with_exception"], [11, 5, 1, "", "worker_async"]], "pytams.xmlutils": [[12, 4, 1, "", "POD_cast_dict"], [12, 6, 1, "", "XMLUtilsError"], [12, 5, 1, "", "dict_to_xml"], [12, 5, 1, "", "get_val_type"], [12, 5, 1, "", "make_xml_snapshot"], [12, 5, 1, "", "manual_cast"], [12, 5, 1, "", "manual_cast_snapshot"], [12, 5, 1, "", "manual_cast_snapshot_noise"], [12, 5, 1, "", "manual_cast_str"], [12, 5, 1, "", "new_element"], [12, 5, 1, "", "oneliner_ndarray"], [12, 5, 1, "", "read_xml_snapshot"], [12, 5, 1, "", "xml_to_dict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:data", "5": "py:function", "6": "py:exception"}, "terms": {"": [1, 4, 10], "0": [0, 1, 6, 9], "00": 0, "002829586512164506": 0, "01": 0, "018": 0, "04": 0, "08": 0, "09": 0, "1": [0, 1, 3, 6, 7, 8], "10": [0, 7], "100": 0, "1000": 0, "1000000000000": 9, "11": 0, "12": 0, "13": 0, "1d": 10, "1e": 7, "2": [0, 1, 7], "200": 0, "2025": 0, "2d": [6, 13], "2y": 1, "3": 1, "30": 0, "3d": 13, "4": 1, "41": 0, "463247": 0, "48": 0, "481": 0, "5": [0, 1, 7], "500": 0, "6": 1, "64": 0, "7": 0, "8": 1, "86400": 0, "95": 0, "998659": 0, "A": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "And": 9, "As": 1, "At": 1, "But": 1, "By": [1, 6], "For": [1, 7], "If": [0, 7, 9], "In": [0, 1, 3, 7, 13], "It": [0, 1, 4, 7, 9, 11], "Of": 1, "One": 0, "The": [0, 1, 3, 4, 6, 7, 9, 11, 13], "To": [0, 1], "With": 1, "_": 1, "__dw": 1, "__init__": 1, "__main__": 0, "__name__": 0, "__rh": 1, "_advanc": 1, "_checkfil": 9, "_computed_step": 9, "_dt": 9, "_file_nam": 6, "_fmodel_t": [3, 7], "_i": 1, "_init_ensemble_onli": 7, "_init_model": 1, "_nois": 4, "_noise_amplitud": 1, "_paramet": [3, 7], "_parameters_ful": 9, "_path": 3, "_plot_diag": 7, "_restart": 3, "_rng": 1, "_save_to_disk": 3, "_score_max": 9, "_snap": 9, "_startdat": 7, "_state": 1, "_step": [4, 9], "_t_cur": 9, "_t_end": 9, "_tdb": 7, "_tid": 9, "_time": 4, "_trajs_db": 3, "_walltim": 7, "_workdir": [4, 9], "_y": 1, "a_arg": 7, "a_db": 11, "a_id": 4, "a_nois": 4, "a_path": 3, "a_traj": 3, "a_traj_list": 3, "a_valid_path": 0, "abc": [0, 1, 8, 11, 12], "about": [3, 5], "abov": [0, 1, 11], "abstract": [1, 4, 8], "access": [0, 1, 3, 6, 11], "accessor": [1, 3, 9], "accomod": 9, "accordingli": 6, "accro": [7, 10], "accur": 1, "activ": [3, 6], "actual": [1, 4, 9], "ad": 8, "adapt": [1, 13], "add": [0, 1, 6], "add_splitting_data": 6, "add_task": 8, "add_trajectori": 6, "addition": [0, 1], "advanc": [1, 4, 7, 9, 11, 13], "advis": 0, "after": [0, 1, 7], "aim": 1, "al": 1, "algorithm": [0, 3, 4, 7, 13], "all": [1, 3, 4, 6, 7, 9, 10], "allow": [6, 7, 9], "allow_completed_lock": [3, 6], "along": 1, "alreadi": 9, "also": [1, 3, 4, 7, 9, 10, 13], "although": 9, "alwai": 0, "am": 1, "among": 7, "an": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13], "analysi": 1, "ancestor": [3, 9], "ancestor_id": [3, 6], "ancestor_traj_id": 6, "ani": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12], "ao": 1, "api": [0, 1, 4], "appear": [1, 13], "append": [3, 6, 8], "append_archived_traj": 3, "append_splitting_iteration_data": 3, "append_traj": 3, "approach": [1, 13], "ar": [1, 3, 7, 8, 9, 13], "archiv": [0, 3, 6], "archive_discard": 0, "archive_trajectori": [3, 6], "archived_traj_list_len": 3, "archivedtrajectori": 6, "arg": 12, "argmin_": 1, "argpars": 7, "argument": [0, 8, 9], "argv": 7, "arr_in": 10, "arrai": [1, 6, 7, 9, 10], "asiorunn": 8, "ask": 1, "assembl": 9, "associ": [0, 1, 12, 13], "assum": 9, "async": [8, 11], "asyncio": [0, 1, 8, 11], "atom": 6, "attribut": 1, "automat": 13, "avail": [1, 7], "averag": 10, "awai": 1, "axi": 1, "b": 1, "back": 8, "backend": [0, 1, 7], "base": [1, 4, 6, 8, 9, 12], "baserunn": 8, "basi": 1, "becaus": 1, "becom": 1, "been": 3, "befor": 0, "begin": 9, "behind": 1, "being": [6, 9, 11], "belong": 1, "below": 9, "better": 1, "between": [1, 13], "bia": [3, 6], "bias": [1, 6], "boldsymbol": 1, "bool": [1, 3, 4, 6, 7, 9, 11], "boolean": [1, 3, 7], "both": [0, 1, 3, 7], "branch": [1, 3, 4, 7, 9, 13], "branch_from_trajectori": 9, "break": [1, 7], "built": 13, "call": [1, 3, 4, 11], "callabl": [8, 11, 12], "can": [0, 1, 3, 4, 7, 8, 10, 13], "carlo": [1, 13], "case": [1, 7], "cast": 12, "catch": 0, "cd": 13, "central": 1, "cerou": 1, "certain": 13, "cfl": 1, "chang": [1, 3], "check": [3, 4, 7, 9], "check_converg": 4, "check_exit_splitting_loop": 7, "checkfil": [3, 9], "checkpoint": [0, 9], "chkfile": 9, "chkfile_dump_al": 0, "choic": 1, "cl": 7, "class": [0, 1, 12], "classmethod": [3, 4, 9], "clear": [3, 4, 9], "clear_archived_trajectori": 6, "clear_splitting_data": 6, "climat": 1, "clock": 6, "clone": 1, "cluster": 0, "code": [0, 1, 7, 10, 13], "collect": [8, 11, 12], "command": 0, "commun": 1, "compat": 4, "complet": [3, 6, 9], "complex": 1, "compon": 4, "comput": [1, 7, 8, 9], "computation": [1, 9, 13], "compute_prob": [0, 7], "concern": 1, "concret": 4, "concur": 8, "concurr": 11, "condit": 1, "confid": 1, "configur": [0, 8], "consid": [1, 6], "consider": 13, "consist": 1, "consistut": 1, "constrain": 1, "construct": [1, 13], "contain": [0, 1, 3, 6, 7, 9, 12], "content": [0, 1], "context": 9, "contrast": 1, "control": [7, 13], "conveni": 9, "converg": [0, 3, 4, 7, 9], "coordin": 1, "copi": 3, "cost": [1, 9], "could": [3, 6], "count": 3, "count_computed_step": 3, "count_converged_traj": 3, "count_ended_traj": 3, "counter": [0, 4, 6, 7, 9], "cover": 1, "creat": [3, 8, 9], "criterion": [4, 7], "critic": 1, "current": [0, 3, 4, 6, 7, 9], "current_scor": 4, "current_tim": 9, "d": [1, 12], "da": 1, "dai": 13, "dask": [0, 1, 7, 8], "dask_backend": 8, "daskrunn": 8, "data": [0, 3, 4, 6, 7, 9, 12, 13], "databas": [1, 5, 6, 7, 11, 13], "dataclass": [1, 9], "date": [0, 7, 11], "datetim": 11, "db": [1, 3, 6], "db_path": 11, "declarativebas": 6, "decoupl": 1, "deep": 3, "def": [0, 1], "default": [0, 4, 6, 7], "default_rng": 1, "defin": [0, 1, 4, 9], "delai": 8, "delet": [3, 6, 9], "deriv": 1, "describ": [0, 1], "destroi": 4, "detail": 1, "determin": [1, 9], "determinist": 0, "develop": 1, "diagnost": [0, 7], "dict": [1, 3, 4, 8, 9, 10, 12], "dict_to_xml": 12, "dictionari": [0, 1, 3, 7, 9, 10, 12], "dictionnari": 12, "differ": [1, 4, 9], "dimens": 13, "dimension": 1, "diment": 1, "directori": [0, 4, 9], "discard": [0, 1, 3, 6], "discarded_id": [3, 6], "discarded_traj_id": 6, "disk": [0, 1, 3, 7, 9], "distanc": 1, "distribut": [1, 8, 13], "divid": 7, "do": [0, 1, 4, 6], "do_multilevel_split": 7, "doc": 13, "document": [1, 5], "doe": [4, 6], "done": 3, "done_with_split": 3, "doubl": 13, "doublewellmodel": 1, "doublewellmodel3d": 0, "draw": 1, "dt": [1, 4], "due": [0, 1], "dump": 6, "dump_file_json": 6, "durat": 7, "dure": [0, 1, 3, 7], "dw_t": 1, "dx_t": 1, "dynam": 1, "e": [0, 1, 4, 6], "each": [0, 1, 6, 7, 8, 11], "easier": 1, "effect": 9, "effici": [1, 9], "either": [1, 6, 7], "elaps": 7, "elapsed_tim": 7, "elem": 12, "elem_text": 12, "element": 12, "elementtre": 12, "elemt": 12, "ellipsi": [11, 12], "empti": [3, 6], "enabl": 0, "encapsul": [1, 4, 7], "end": [0, 1, 3, 4, 7, 9], "end_dat": 11, "end_tim": 0, "engin": 8, "ensembl": [0, 1, 3, 6, 7], "ensur": [0, 1, 4], "entir": 0, "entri": [3, 6, 9, 12], "equal": [3, 4, 10], "error": [0, 6, 7, 8, 9], "especi": 7, "estim": [0, 1], "et": 1, "etc": 1, "etre": 12, "evalu": 13, "even": [1, 3], "event": [1, 3, 9, 13], "eventu": 1, "everi": 1, "evolut": 3, "exactli": [1, 4], "exampl": 13, "exceed": 7, "except": [4, 11], "execut": [0, 8], "execute_promis": 8, "executor": 11, "exist": [0, 3, 6, 9], "exit": 7, "exp": 1, "expens": [1, 13], "explicitli": 9, "explor": 1, "expos": 1, "extend": 1, "extern": 1, "extract": 3, "f1": 1, "f2": 1, "fail": [7, 8], "fals": [0, 3, 6, 9], "famili": 1, "fetch_archived_trajectori": 6, "fetch_trajectori": 6, "few": [0, 1], "figur": 1, "file": [0, 1, 3, 6, 7, 9, 10, 13], "file_nam": 6, "final": [0, 1], "finish": [3, 7], "finish_ongoing_split": 7, "first": [1, 3], "fix": 0, "flag": [3, 7], "flage": 3, "float": [1, 3, 4, 6, 7, 9, 11, 12], "fluid": 1, "fmodel": [1, 3, 5, 9], "fmodel_t": [0, 3, 7, 9], "fname": 3, "folder": [3, 13], "follow": [1, 13], "forc": [1, 12], "form": 1, "form_trajectory_id": 9, "format": [3, 12], "formul": 0, "forward": [0, 1, 3, 4, 7, 9, 10], "forwardmodelbaseclass": [1, 3, 4, 9], "frac": 1, "frequenc": 0, "fresh": 0, "from": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12], "from_traj": [9, 11], "frozen": 9, "full": [3, 9], "function": [1, 3, 4], "futur": 11, "g": [0, 1, 4], "gather": [1, 9], "gener": [0, 1, 4, 7, 11, 12], "generate_trajectory_ensembl": 7, "genoa": 0, "get": [1, 3, 6, 7, 9, 10, 11], "get_archived_trajectory_count": 6, "get_bias": 6, "get_checkfil": 9, "get_computed_steps_count": 9, "get_current_st": [1, 4], "get_index_from_id": 9, "get_k_split": 6, "get_last_st": 9, "get_length": 9, "get_metadata_json": 9, "get_min_scor": 10, "get_minmax": 6, "get_module_local_import": 10, "get_nbranch": 9, "get_nois": 4, "get_noise_arrai": 9, "get_ongo": [3, 6], "get_restart_at_random": 7, "get_runner_typ": 8, "get_score_arrai": 9, "get_time_arrai": 9, "get_traj": 3, "get_trajectory_count": 6, "get_transition_prob": 3, "get_val_typ": 12, "get_weight": 6, "get_workdir": 9, "github": 13, "given": [1, 3, 6, 9], "go": 1, "goe": 1, "greater": 4, "ha": [0, 1, 3, 4, 9], "handl": [1, 4, 11, 13], "has_converg": 9, "has_end": [3, 9], "has_start": 9, "has_stat": 9, "hat": 1, "have": [1, 4, 7, 9], "header": 3, "header_fil": 3, "helper": [3, 9, 10], "here": 1, "hereaft": [1, 13], "hierarchi": 1, "high": 13, "higher": 1, "highlight": 1, "histori": [1, 9], "hold": 3, "hook": 4, "hour": 13, "hpc": 1, "html": 13, "i": [0, 1, 3, 4, 6, 7, 9, 13], "id": [3, 6, 9], "idea": 1, "ident": 9, "idl": 6, "idstr": 9, "idx": [3, 12], "illustr": 1, "implement": [4, 7, 13], "import": [0, 1, 10], "in_memori": 6, "includ": 3, "incompat": 3, "incomplet": 6, "increment": [1, 4], "independ": [0, 1, 3], "index": [0, 3, 6, 7, 9, 12, 13], "indic": [3, 6, 7, 10], "individu": 1, "info": [0, 3], "init_active_ensembl": 3, "init_condit": 1, "init_ensemble_don": 3, "init_ensemble_onli": 0, "initi": [0, 1, 3, 7, 11], "input": [0, 7], "instanc": [1, 9], "instanci": [1, 3], "instant": 9, "instantan": 1, "instanti": 0, "instead": 1, "insuffici": 7, "int": [1, 3, 4, 6, 7, 8, 9, 10, 12], "interest": 4, "interfac": [0, 7], "intern": [1, 3, 4, 8], "interrupt": [6, 7], "interv": 1, "introduc": 1, "introduct": 13, "io": 0, "ioprefix": 1, "is_converg": 9, "is_empti": 3, "iter": [0, 1, 3, 6, 7], "its": 1, "itself": [0, 4, 10], "j": 1, "job": [0, 1], "job_prologu": 0, "json": [6, 9], "json_fil": 6, "just_delai": 8, "k": [1, 6, 7], "k_index": 6, "k_split": 3, "keep": 1, "kei": 12, "ksplit": [3, 6], "l_i": 1, "l_j": 1, "larg": 0, "last": [3, 6, 9], "later": 7, "latest": 4, "launch": 11, "lead": 7, "left": [1, 6], "length": [1, 3, 7, 9, 10], "less": 1, "let": [1, 10], "level": [0, 1, 7], "light": 0, "limit": [0, 6, 7, 9, 11], "line": [0, 1, 12], "list": [0, 1, 3, 6, 7, 8, 9, 10], "list_of_p": 8, "load": [3, 9, 13], "load_archived_trajectori": [0, 3], "load_data": [0, 3], "local": [0, 3, 10, 13], "lock": [3, 6], "lock_trajectori": [3, 6], "log": [0, 8], "logger": 10, "loglevel": 0, "look": 1, "loop": [1, 7, 9], "low": 1, "lower": 10, "main": [7, 9, 13], "make": [1, 13], "make_nois": [1, 4], "make_promis": 8, "make_xml_snapshot": 12, "manual": 12, "manual_cast": 12, "manual_cast_snapshot": 12, "manual_cast_snapshot_nois": 12, "manual_cast_str": 12, "map": 6, "mark": 6, "mark_last_iteration_as_complet": 6, "mark_last_splitting_iteration_as_don": 3, "mark_trajectory_as_complet": 6, "mathcal": 1, "max": [1, 3, 6, 10], "maxima": [7, 10], "maximum": [1, 3, 6, 7, 9], "mc": 1, "measur": 1, "memori": [0, 1, 3, 6, 9], "metadata": [1, 3, 6, 9], "method": [1, 4, 9], "might": [1, 7], "min": [1, 3, 6], "min_idx_list": 7, "min_max": [3, 6], "min_val": [3, 6, 11], "minima": 10, "minimum": [3, 6], "mod": 10, "mode": 3, "model": [0, 1, 3, 4, 7, 9, 10, 13], "modul": [1, 13], "modular": 13, "module_nam": 10, "molecular": 1, "mont": [1, 13], "more": [1, 9, 10], "most": 0, "move": [0, 1, 9, 10], "moving_avg": 10, "ms_worker": 11, "multi": [1, 7, 13], "multilevel": [1, 13], "multipl": [0, 7], "must": 4, "my_problem_class": 0, "myproblem": 0, "mytamsrun": 0, "n": [1, 9], "n_": 1, "n_split_it": 3, "n_traj": [3, 7], "n_worker": 8, "nabla": 1, "naiv": [1, 13], "name": [0, 3, 4, 6, 9, 10], "namespac": 7, "nb": 9, "ndarrai": [3, 6, 7, 9, 10, 12], "necessari": [1, 9], "need": [1, 4], "need_end_st": [1, 4], "neglig": 9, "new": [0, 1, 3, 4, 6, 8, 9], "new_el": 12, "next": [0, 1, 4], "nois": [1, 4, 9, 12], "noise_amplitud": 1, "non": 1, "none": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12], "normal": 1, "note": [0, 1, 3, 6, 7, 9], "noth": 6, "now": 1, "np": 1, "nsplitit": [0, 3], "ntasks_per_job": 0, "ntraj": 3, "ntrajectori": 0, "number": [0, 1, 3, 6, 7, 8, 9, 10], "numpi": [3, 6, 7, 9, 10], "nworker": 10, "nworker_init": 0, "nworker_it": 0, "obj": 8, "object": [0, 1, 3, 7, 8, 9], "observ": 1, "onc": 0, "one": [0, 1, 11], "oneliner_ndarrai": 12, "ones": 7, "ongo": [3, 6, 7], "onli": [0, 1, 3, 4, 9], "opt": 0, "option": [0, 1, 6, 7], "order": [0, 1, 7, 9], "origin": 1, "orm": 6, "other": 10, "otherwis": [6, 9], "out": 3, "out_of_tim": 7, "outcom": 1, "output": 3, "over": [4, 7, 9], "overhead": 9, "overrid": [1, 3, 4], "overview": 1, "overwrit": 3, "overwrite_traj": 3, "p": 1, "pad": 9, "page": 13, "parallel": [7, 13], "param": [1, 3, 4, 8, 10], "paramet": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12], "pars": 7, "parse_cl_arg": 7, "part": 0, "particl": 1, "particular": [1, 3, 13], "pass": [0, 7], "path": [0, 1, 3, 4, 6, 9, 11], "pathlib": [0, 3, 4, 9], "per": 0, "perform": [1, 7], "perspect": 1, "physic": [0, 1, 4], "pick": 1, "pickl": 10, "place": 1, "plain": 9, "platform": 1, "plot": [3, 7], "plot_archiv": 3, "plot_min_max_span": 3, "plot_score_funct": 3, "plugin": 8, "pod_cast_dict": 12, "point": 1, "pool": 3, "pool_fil": 3, "pool_work": 11, "popul": 3, "possibl": [0, 1, 6], "possibli": 7, "post": [3, 4], "post_trajectory_branching_hook": 4, "post_trajectory_restore_hook": 4, "practic": [0, 1], "precis": 1, "prescrib": 9, "present": 1, "print": [3, 12], "probabl": [0, 1, 3, 7, 13], "problem": [0, 9], "proce": 3, "process": [1, 3, 8], "prod_": 1, "promis": 8, "propag": 9, "provid": [0, 1, 3, 7, 9, 10], "pure": 1, "purpos": 7, "push": 13, "put": [8, 11], "py": [0, 1], "pytam": 1, "pytams_root_fold": 13, "python": [0, 1, 6], "q": 1, "qualiti": 1, "queue": [0, 8, 11], "r": 1, "rais": [3, 6, 7, 8, 9], "random": [0, 1, 7], "rang": 3, "rare": [1, 13], "reach": [1, 9], "reaction": 1, "read": [1, 6, 12], "read_onli": 3, "read_xml_snapshot": 12, "readabl": 3, "reader": 1, "reason": 1, "reduc": 1, "reduct": 1, "ref": 3, "refer": 1, "regular": 0, "releas": [3, 6], "release_all_trajectori": 6, "release_trajectori": 6, "relev": 1, "reli": [1, 4, 8], "reliabl": 1, "remain": [1, 7], "remaining_walltim": 7, "rep": 1, "repeat": 1, "repres": 1, "represent": 6, "reproduc": 0, "req": 0, "request": [0, 3, 7], "requir": [0, 1, 4, 7], "res_queu": 11, "reset": 3, "reset_initial_ensemble_stag": 3, "resid": 9, "respons": 1, "restart": [0, 3, 6, 7, 9, 11], "restor": [3, 4, 9], "restore_from_checkfil": 9, "restructur": 13, "result": [8, 11], "return": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12], "reus": 4, "rh": 1, "right": 1, "ro_mod": 6, "root": 12, "roughli": 7, "row": 6, "rst_traj": [9, 11], "run": [1, 7, 8, 9, 13], "run_task": 8, "runner": [0, 1, 7, 8], "runnererror": 8, "runtimeerror": 9, "sai": 0, "sampl": [0, 1], "save": [0, 3, 7, 9], "save_trajectori": 3, "schedul": [7, 8], "score": [0, 1, 3, 4, 6, 9, 10, 11, 12], "score_max": 9, "screen": [0, 3], "script": 0, "sde": 1, "search": [0, 13], "second": [0, 7], "section": [0, 1, 7], "see": [0, 1], "seed": 0, "select": [1, 7], "self": 1, "separ": [0, 4, 7], "serial": 12, "set": [0, 1, 3, 4, 6, 7, 9, 10, 11, 12], "set_checkfil": 9, "set_current_st": [1, 4], "set_init_ensemble_flag": 3, "set_nois": 4, "set_workdir": [4, 9], "setter": [4, 9], "setup": [8, 10], "setup_logg": [0, 10], "sever": [1, 10], "should": 0, "show": 1, "simpl": 13, "simpli": 0, "simplist": 1, "simul": [1, 4], "sinc": 7, "singl": 12, "size": [0, 1, 4, 9], "slack": 7, "slurm": [0, 1, 7], "small": [0, 1], "smallest": 1, "snap": 12, "snapshot": [1, 9, 12], "snippet": 1, "so": [0, 1, 4, 10], "some": [0, 1, 4, 6], "sort": 1, "sourc": [3, 4, 6, 7, 8, 9, 10, 11, 12], "space": 1, "sparse_freq": 0, "sparse_start": 0, "spawn": 1, "specif": [0, 1, 7, 13], "specifi": [0, 1, 7, 9], "split": [0, 1, 3, 6, 7, 13], "split_id": 6, "splittingiter": 6, "sql": [3, 6], "sqlalchemi": 6, "sqlalchemyerror": [3, 6], "sqldb": 5, "sqlfile": 6, "sqrt": 1, "stabl": 13, "stage": [3, 7], "stall_tol": 7, "stamp": 12, "standard": 0, "standard_norm": 1, "start": [0, 1, 6, 7, 9], "state": [0, 1, 3, 4, 6, 7, 9, 12, 13], "statu": [3, 6], "step": [0, 1, 3, 4, 7, 9], "step_siz": [0, 9], "still": 13, "stochast": [1, 4, 7, 9, 12, 13], "stop": [0, 7], "storag": 13, "store": [1, 3, 6, 9], "str": [1, 3, 4, 6, 7, 9, 10, 11, 12], "strictli": 1, "string": [6, 9, 12], "struct": 1, "structur": [9, 13], "sub": 4, "submit": [0, 1], "submodul": 13, "subsampl": 1, "substep": 1, "successfulli": 6, "sum": 1, "sum_": 1, "summari": 0, "sup_": 1, "supercomput": 13, "sync_wk": 8, "synchron": 8, "system": [1, 13], "t": 1, "t_a": 1, "t_b": 1, "t_end": 9, "t_metadata": 6, "tabl": [3, 6], "tackl": [1, 8], "tag": 12, "take": [7, 8, 13], "taken": [3, 9], "tam": [0, 3, 4, 5, 6, 9, 10, 11, 13], "tamsdb": 0, "target": [0, 4], "target_scor": 4, "targetscor": 0, "task": [0, 1, 8, 11], "taskrunn": [1, 5, 11], "tdb": 0, "techniqu": 1, "templat": 1, "temporarili": 12, "termin": [7, 9], "test": [0, 1], "testdb": 0, "text": 13, "than": [1, 4], "thei": 1, "them": [7, 8], "theori": 13, "thi": [1, 3, 4, 7, 9], "those": 10, "threshold": [1, 9], "through": 1, "tid": 3, "time": [0, 1, 3, 4, 7, 9, 11, 12], "todo": [1, 2], "togeth": 7, "toml": [0, 1], "too": 1, "total": [0, 1, 3], "toward": 1, "track": 1, "traj": [0, 3, 6, 11], "traj_advance_with_except": 11, "traj_fil": [6, 9], "traj_id": [3, 6, 9], "traj_list": 3, "traj_list_len": 3, "trajectori": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13], "transit": [0, 3, 7, 13], "treat": 9, "trigger": [0, 3, 7], "trivial": 1, "true": [0, 3, 6, 7, 9], "tupl": [7, 9, 10, 11, 12], "tutori": 13, "two": [1, 7, 12, 13], "type": [0, 1, 3, 6, 7, 8, 9, 10, 12], "type_str": 12, "under": [7, 13], "undergo": 3, "unfinish": 7, "unless": [0, 9], "unlock": 3, "unlock_trajectori": 3, "unreason": 13, "until": [1, 9], "up": 1, "updat": [0, 3, 4, 6, 9, 11], "update_db": 3, "update_metadata": 9, "update_splitting_data": 6, "update_splitting_iteration_data": 3, "update_traj_list": 3, "update_trajectory_fil": [3, 6], "upon": [0, 6, 7], "us": [0, 1, 3, 4, 6, 7, 9, 11, 13], "usag": [1, 13], "user": [0, 3, 4], "util": [0, 5, 12], "v": 1, "v0": 0, "va": 1, "val": 12, "valid_status": 6, "valu": [1, 3, 6, 9, 10, 11, 12], "valueerror": [3, 6, 7], "variabl": [3, 4, 6, 7, 9], "varianc": 1, "variou": [0, 1], "vb": 1, "vector": 1, "veri": [0, 1], "version": 13, "w": 1, "w_": 1, "w_0": 1, "w_j": 1, "wa": [3, 6, 7, 13], "wall": [6, 7, 9], "wallclock": 7, "walltim": [0, 7, 9, 11], "walltimelimiterror": 9, "want": [1, 10], "warn": [0, 9], "we": [0, 1, 3, 10], "weight": [1, 3, 6], "well": [4, 9, 13], "what": 9, "when": [0, 1, 3, 4, 6, 9, 10], "where": [1, 13], "whether": [1, 3, 4, 7], "which": [0, 1, 4, 7, 8, 11], "while": [0, 1, 6], "window": 10, "window_l": 10, "within": [0, 1, 10], "work": [0, 1, 4, 6, 7, 9, 11], "workdir": [4, 9], "worker": [0, 5, 6, 7, 8, 9, 10, 13], "worker_async": 11, "worker_walltim": 0, "workerloggerplugin": 8, "workerplugin": 8, "wors": 1, "wrap": 11, "wrapper": 8, "write": [0, 1], "x": 1, "x_": 1, "x_3": 1, "x_i": 1, "x_t": 1, "xi": 1, "xi_": 1, "xml": [3, 9, 12], "xml_to_dict": 12, "xmlutil": 5, "xmlutilserror": 12, "y": 1, "yet": 7, "yield": 1, "your": 0, "zero": 1}, "titles": ["Usage", "Theory", "Tutorials", "pytams.database", "pytams.fmodel", "pytams", "pytams.sqldb", "pytams.tams", "pytams.taskrunner", "pytams.trajectory", "pytams.utils", "pytams.worker", "pytams.xmlutils", "Welcome to pyTAMS\u2019s documentation!"], "titleterms": {"": 13, "2d": 1, "3d": 2, "A": 1, "algorithm": 1, "attribut": [6, 7, 12], "class": [3, 4, 6, 7, 8, 9], "consider": 1, "content": [3, 4, 6, 7, 8, 9, 10, 11, 12], "control": 0, "corner": 13, "data": 1, "databas": [0, 3], "develop": 13, "dimens": 1, "document": 13, "doubl": [1, 2], "exampl": 1, "except": [8, 9, 12], "fmodel": 4, "function": [7, 8, 9, 10, 11, 12], "high": 1, "implement": 1, "indic": 13, "introduct": 1, "load": 0, "modul": [3, 4, 6, 7, 8, 9, 10, 11, 12], "parallel": 1, "pytam": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "run": 0, "simpl": 1, "sqldb": 6, "storag": 1, "structur": 1, "submodul": 5, "tabl": 13, "tam": [1, 7], "taskrunn": 8, "theori": 1, "trajectori": 9, "tutori": 2, "usag": 0, "user": 13, "util": 10, "welcom": 13, "well": [1, 2], "worker": [1, 11], "xmlutil": 12}})